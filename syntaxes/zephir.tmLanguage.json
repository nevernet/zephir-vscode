{
	"information_for_contributors": [
		"This file initially has been converted from Atom extension.",
		"If you want to provide a fix or improvement, please create a pull request against https://github.com/zephir-lang/zephir-vscode repository.",
		"There is an #editorsupport channel on the Phalcon Discord Server: https://discord.gg/PNFsSsr",
		"If you would like to discuss an idea or need help or have other feedback you can usually find me (@klay) idling there."
	],
	"name": "Zephir",
	"comment": "Zephir Language support for VSCode",
	"version": "1.5.0",
	"fileTypes": [
        "zep"
    ],
	"scopeName": "source.zephir",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"begin": "(?i)^\\s*(interface)\\s+([a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)\\s*(extends)?\\s*",
			"beginCaptures": {
				"1": {
					"name": "storage.type.interface.zephir"
				},
				"2": {
					"name": "entity.name.type.interface.zephir"
				},
				"3": {
					"name": "storage.modifier.extends.zephir"
				}
			},
			"end": "(?i)((?:[a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*\\s*,\\s*)*)([a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)?\\s*(?:(?={)|$)",
			"endCaptures": {
				"1": {
					"patterns": [
						{
							"match": "(?i)[a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*",
							"name": "entity.other.inherited-class.zephir"
						},
						{
							"match": ",",
							"name": "punctuation.separator.classes.zephir"
						}
					]
				},
				"2": {
					"name": "entity.other.inherited-class.zephir"
				}
			},
			"name": "meta.interface.zephir",
			"patterns": [
				{
					"include": "#namespace"
				}
			]
		},
		{
			"match": "(?i)^\\s*(namespace)\\s+([a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}\\\\]+)(?=\\s*;)",
			"name": "meta.namespace.zephir",
			"captures": {
				"1": {
					"name": "keyword.other.namespace.zephir"
				},
				"2": {
					"name": "entity.name.type.namespace.zephir",
					"patterns": [
						{
							"match": "\\\\",
							"name": "punctuation.separator.inheritance.zephir"
						}
					]
				}
			}
		},
		{
			"begin": "(?i)(?:^)\\s*(namespace)\\s+",
			"beginCaptures": {
				"1": {
					"name": "keyword.other.namespace.zephir"
				}
			},
			"end": "(?<=})",
			"name": "meta.namespace.zephir",
			"patterns": [
				{
					"include": "#comments"
				},
				{
					"match": "(?i)[a-z0-9_\\x{7f}-\\x{7fffffff}\\\\]+",
					"name": "entity.name.type.namespace.zephir",
					"captures": {
						"0": {
							"patterns": [
								{
									"match": "\\\\",
									"name": "punctuation.separator.inheritance.zephir"
								}
							]
						}
					}
				},
				{
					"begin": "\\{",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.namespace.begin.bracket.curly.zephir"
						}
					},
					"end": "\\}",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.namespace.end.bracket.curly.zephir"
						}
					},
					"patterns": [
						{
							"include": "$self"
						}
					]
				},
				{
					"match": "[^\\s]+",
					"name": "invalid.illegal.identifier.zephir"
				}
			]
		},
		{
			"match": "\\s+(?=use\\b)"
		},
		{
			"begin": "(?i)\\buse\\b",
			"beginCaptures": {
				"0": {
					"name": "keyword.other.use.zephir"
				}
			},
			"end": "(?<=})|(?=;)",
			"name": "meta.use.zephir",
			"patterns": [
				{
					"match": "\\b(const|function)\\b",
					"name": "storage.type.${1:/downcase}.zephir"
				},
				{
					"begin": "\\{",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.use.begin.bracket.curly.zephir"
						}
					},
					"end": "\\}",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.use.end.bracket.curly.zephir"
						}
					},
					"patterns": [
						{
							"include": "#scope-resolution"
						},
						{
							"match": "(?i)\\b(as)\\s+(final|abstract|public|private|protected|static)\\s+([a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)",
							"captures": {
								"1": {
									"name": "keyword.other.use-as.zephir"
								},
								"2": {
									"name": "storage.modifier.zephir"
								},
								"3": {
									"name": "entity.other.alias.zephir"
								}
							}
						},
						{
							"match": "(?i)\\b(as)\\s+([a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)",
							"captures": {
								"1": {
									"name": "keyword.other.use-as.zephir"
								},
								"2": {
									"patterns": [
										{
											"match": "^(?:final|abstract|public|private|protected|static)$",
											"name": "storage.modifier.zephir"
										},
										{
											"match": ".+",
											"name": "entity.other.alias.zephir"
										}
									]
								}
							}
						},
						{
							"match": "(?i)\\b(insteadof)\\s+([a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)",
							"captures": {
								"1": {
									"name": "keyword.other.use-insteadof.zephir"
								},
								"2": {
									"name": "support.class.zephir"
								}
							}
						},
						{
							"match": ";",
							"name": "punctuation.terminator.expression.zephir"
						},
						{
							"include": "#use-inner"
						}
					]
				},
				{
					"include": "#use-inner"
				}
			]
		},
		{
			"begin": "(?i)^\\s*(?:(abstract|final)\\s+)?(class)\\s+\\$?([a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)",
			"beginCaptures": {
				"1": {
					"name": "storage.modifier.${1:/downcase}.zephir"
				},
				"2": {
					"name": "storage.type.class.zephir"
				},
				"3": {
					"name": "entity.name.type.class.zephir"
				}
			},
			"end": "\\}",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.class.end.bracket.curly.zephir"
				}
			},
			"name": "meta.class.zephir",
			"patterns": [
				{
					"include": "#comments"
				},
				{
					"begin": "(?i)(extends)\\s+",
					"beginCaptures": {
						"1": {
							"name": "storage.modifier.extends.zephir"
						}
					},
					"contentName": "meta.other.inherited-class.zephir",
					"end": "(?i)(?=[^a-z0-9_\\x{7f}-\\x{7fffffff}\\\\])",
					"patterns": [
						{
							"begin": "(?i)(?=\\\\?[a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*\\\\)",
							"end": "(?i)([a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)?(?=[^a-z0-9_\\x{7f}-\\x{7fffffff}\\\\])",
							"endCaptures": {
								"1": {
									"name": "entity.other.inherited-class.zephir"
								}
							},
							"patterns": [
								{
									"include": "#namespace"
								}
							]
						},
						{
							"include": "#class-builtin"
						},
						{
							"include": "#namespace"
						},
						{
							"match": "(?i)[a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*",
							"name": "entity.other.inherited-class.zephir"
						}
					]
				},
				{
					"begin": "(?i)(implements)\\s+",
					"beginCaptures": {
						"1": {
							"name": "storage.modifier.implements.zephir"
						}
					},
					"end": "(?i)(?=[;{])",
					"patterns": [
						{
							"include": "#comments"
						},
						{
							"begin": "(?i)(?=[a-z0-9_\\x{7f}-\\x{7fffffff}\\\\]+)",
							"contentName": "meta.other.inherited-class.zephir",
							"end": "(?i)(?:\\s*(?:,|(?=[^a-z0-9_\\x{7f}-\\x{7fffffff}\\\\\\s]))\\s*)",
							"patterns": [
								{
									"begin": "(?i)(?=\\\\?[a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*\\\\)",
									"end": "(?i)([a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)?(?=[^a-z0-9_\\x{7f}-\\x{7fffffff}\\\\])",
									"endCaptures": {
										"1": {
											"name": "entity.other.inherited-class.zephir"
										}
									},
									"patterns": [
										{
											"include": "#namespace"
										}
									]
								},
								{
									"include": "#class-builtin"
								},
								{
									"include": "#namespace"
								},
								{
									"match": "(?i)[a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*",
									"name": "entity.other.inherited-class.zephir"
								}
							]
						}
					]
				},
				{
					"begin": "\\{",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.class.begin.bracket.curly.zephir"
						}
					},
					"end": "(?=})",
					"contentName": "meta.class.body.zephir",
					"patterns": [
						{
							"include": "$self"
						}
					]
				}
			]
		},
		{
			"include": "#switch_statement"
		},
		{
			"match": "\\s*(?<!\\$)\\b(break|case|continue|declare|default|die|let|var|do|else(if)?|exit|for|fetch|reverse|(?:un)?likely|if|return|match|switch|use|while|loop|yield)\\b",
			"captures": {
				"1": {
					"name": "keyword.control.${1:/downcase}.zephir"
				}
			}
		},
		{
			"begin": "(?i)\\b((?:require|include)(?:_once)?)\\s+",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.import.include.zephir"
				}
			},
			"end": "(?=\\s|;|$)",
			"name": "meta.include.zephir",
			"patterns": [
				{
					"include": "$self"
				}
			]
		},
		{
			"begin": "\\b(catch)\\s*",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.exception.catch.zephir"
				}
			},
			"end": "\\{",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.parameters.begin.bracket.curly.zephir"
				}
			},
			"name": "meta.catch.zephir",
			"patterns": [
				{
					"include": "#namespace"
				},
				{
					"match": "(?i)([a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)((?:\\s*\\|\\s*[a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)*)\\s*(?:,)\\s*((\\$+)?[a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)",
					"captures": {
						"1": {
							"name": "support.class.exception.zephir"
						},
						"2": {
							"patterns": [
								{
									"match": "(?i)[a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*",
									"name": "support.class.exception.zephir"
								},
								{
									"match": "\\|",
									"name": "punctuation.separator.delimiter.zephir"
								}
							]
						},
						"3": {
							"name": "variable.other.zephir"
						},
						"4": {
							"name": "punctuation.definition.variable.zephir"
						}
					}
				}
			]
		},
		{
			"match": "\\b(catch|try|throw|exception|finally)\\b",
			"name": "keyword.control.exception.zephir"
		},
		{
			"include": "#function-definition"
		},
		{
			"begin": "((?:(?:final|abstract|public|private|protected|static|inline|internal|scoped|deprecated)\\s+)*)(function|fn)\\s+\\$?(?i:([a-zA-Z_\\x{7f}-\\x{7fffffff}][a-zA-Z0-9_\\x{7f}-\\x{7fffffff}]*))\\s*(\\()",
			"beginCaptures": {
				"1": {
					"patterns": [
						{
							"match": "final|abstract|public|private|protected|static|inline|internal|scoped|deprecated",
							"name": "storage.modifier.zephir"
						}
					]
				},
				"2": {
					"name": "storage.type.function.zephir"
				},
				"3": {
					"name": "entity.name.function.zephir"
				},
				"4": {
					"name": "punctuation.definition.parameters.begin.bracket.round.zephir"
				}
			},
			"contentName": "meta.function.parameters.zephir",
			"end": "(\\))(?:\\s*(:)\\s*([a-zA-Z_\\x{7f}-\\x{7fffffff}][a-zA-Z0-9_\\x{7f}-\\x{7fffffff}]*))?",
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.parameters.end.bracket.round.zephir"
				},
				"2": {
					"name": "keyword.operator.return-value.zephir"
				},
				"3": {
					"name": "storage.type.zephir"
				}
			},
			"name": "meta.function.zephir",
			"patterns": [
				{
					"include": "#function-parameters"
				}
			]
		},
		{
			"include": "#scope-resolution"
		},
		{
			"include": "#variables"
		},
		{
			"include": "#strings"
		},
		{
			"begin": "\\b(array)\\b\\s*(?=[\\\\$a-z_])",
			"beginCaptures": {
				"1": {
					"name": "storage.type.zephir"
				}
			},
			"end": "(=)\\s*(\\[)",
			"endCaptures": {
				"1": {
					"name": "keyword.operator.assignment.zephir"
				},
				"2": {
					"name": "punctuation.section.array.begin.zephir"
				}
			},
			"patterns": [
				{
					"include": "#variable-name"
				},
				{
					"include": "$self"
				}
			]
		},
		{
			"begin": "\\b(array)\\b\\s*\\b(?:(\\$+)?[a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)\\b\\s*(\\[)",
			"beginCaptures": {
				"1": {
					"name": "storage.type.zephir"
				},
				"2": {
					"name": "punctuation.section.array.begin.zephir"
				}
			},
			"end": "\\]",
			"endCaptures": {
				"0": {
					"name": "punctuation.section.array.end.zephir"
				}
			},
			"name": "meta.array.zephir",
			"patterns": [
				{
					"include": "$self"
				}
			]
		},
		{
			"match": "(?i)(\\()\\s*(array|real|double|float|int(?:eger)?|bool(?:ean)?|i?string|u?long|u?char|void|unsigned|null|object|binary|unset)\\s*(\\))",
			"captures": {
				"1": {
					"name": "punctuation.definition.storage-type.begin.bracket.round.zephir"
				},
				"2": {
					"name": "storage.type.zephir"
				},
				"3": {
					"name": "punctuation.definition.storage-type.end.bracket.round.zephir"
				}
			}
		},
		{
			"include": "#typehinting"
		},
		{
			"match": "(?i)\\b(array|real|double|float|uint|int(eger)?|u?long|u?char|void|unsigned|null|bool(ean)?|string|class|var|function|interface|parent|self|object)\\b",
			"name": "storage.type.zephir"
		},
		{
			"match": "(?i)\\b(global|abstract|const|extends|implements|final|private|protected|public|static|inline|internal|scoped|deprecated)\\b",
			"name": "storage.modifier.zephir"
		},
		{
			"include": "#object"
		},
		{
			"match": ";",
			"name": "punctuation.terminator.expression.zephir"
		},
		{
			"match": ":",
			"name": "punctuation.terminator.statement.zephir"
		},
		{
			"include": "#numbers"
		},
		{
			"match": "(?i)\\bclone\\b",
			"name": "keyword.other.clone.zephir"
		},
		{
			"match": "\\.=?",
			"name": "keyword.operator.string.zephir"
		},
		{
			"captures": {
				"1": {
					"name": "keyword.operator.assignment.zephir"
				},
				"2": {
					"name": "storage.modifier.reference.zephir"
				},
				"3": {
					"name": "storage.modifier.reference.zephir"
				}
			},
			"match": "(?i)(\\=)(&)|(&)(?=[$a-z_])"
		},
		{
			"match": "@",
			"name": "keyword.operator.error-control.zephir"
		},
		{
			"match": "===|==|!==|!=|<>",
			"name": "keyword.operator.comparison.zephir"
		},
		{
			"match": "=|\\+=|\\-=|\\*=|/=|%=|&=|\\|=|\\^=|<<=|>>=",
			"name": "keyword.operator.assignment.zephir"
		},
		{
			"match": "<=>|<=|>=|<|>",
			"name": "keyword.operator.comparison.zephir"
		},
		{
			"match": "\\-\\-|\\+\\+",
			"name": "keyword.operator.increment-decrement.zephir"
		},
		{
			"match": "\\-|\\+|\\*|/|%",
			"name": "keyword.operator.arithmetic.zephir"
		},
		{
			"match": "(?i)(!|&&|\\|\\|)|\\b(and|or|xor|as)\\b",
			"name": "keyword.operator.logical.zephir"
		},
		{
			"include": "#function-call"
		},
		{
			"match": "<<|>>|~|\\^|&|\\|",
			"name": "keyword.operator.bitwise.zephir"
		},
		{
			"include": "#typeof"
		},
		{
			"include": "#instanceof"
		},
		{
			"include": "#instantiation"
		},
		{
			"captures": {
				"1": {
					"name": "keyword.control.goto.zephir"
				},
				"2": {
					"name": "support.other.zephir"
				}
			},
			"match": "(?i)(goto)\\s+([a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)"
		},
		{
			"captures": {
				"1": {
					"name": "entity.name.goto-label.zephir"
				}
			},
			"match": "(?i)^\\s*([a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)\\s*:(?!:)"
		},
		{
			"include": "#ternary_shorthand"
		},
		{
			"include": "#null_coalescing"
		},
		{
			"include": "#ternary_expression"
		},
		{
			"begin": "\\{",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.begin.bracket.curly.zephir"
				}
			},
			"end": "\\}",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.end.bracket.curly.zephir"
				}
			},
			"patterns": [
				{
					"include": "$self"
				}
			]
		},
		{
			"begin": "\\[",
			"beginCaptures": {
				"0": {
					"name": "punctuation.section.array.begin.zephir"
				}
			},
			"end": "\\]",
			"endCaptures": {
				"0": {
					"name": "punctuation.section.array.end.zephir"
				}
			},
			"patterns": [
				{
					"include": "$self"
				}
			]
		},
		{
			"begin": "\\(",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.begin.bracket.round.zephir"
				}
			},
			"end": "\\)",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.end.bracket.round.zephir"
				}
			},
			"patterns": [
				{
					"include": "$self"
				}
			]
		},
		{
			"include": "#constants"
		},
		{
			"match": ",",
			"name": "punctuation.separator.delimiter.zephir"
		}
	],
	"repository": {
		"class-builtin": {
			"patterns": [
				{
					"match": "(?i)(\\\\)?\\b((APC|Append)Iterator|Array(Access|Iterator|Object)|Bad(Function|Method)CallException|(Caching|CallbackFilter)Iterator|Collator|Collectable|Cond|Countable|CURLFile|Date(Interval|Period|Time(Interface|Immutable|Zone)?)?|Directory(Iterator)?|DomainException|DOM(Attr|CdataSection|CharacterData|Comment|Document(Fragment)?|Element|EntityReference|Implementation|NamedNodeMap|Node(list)?|ProcessingInstruction|Text|XPath)|(Error)?Exception|EmptyIterator|finfo|Ev(Check|Child|Embed|Fork|Idle|Io|Loop|Periodic|Prepare|Signal|Stat|Timer|Watcher)?|Event(Base|Buffer(Event)?|SslContext|Http(Request|Connection)?|Config|DnsBase|Util|Listener)?|FANNConnection|(Filter|Filesystem)Iterator|Gender\\\\Gender|GlobIterator|Gmagick(Draw|Pixel)?|Haru(Annotation|Destination|Doc|Encoder|Font|Image|Outline|Page)|Http((Inflate|Deflate)?Stream|Message|Request(Pool)?|Response|QueryString)|HRTime\\\\(PerformanceCounter|StopWatch)|Intl(Calendar|((CodePoint|RuleBased)?Break|Parts)?Iterator|DateFormatter|TimeZone)|Imagick(Draw|Pixel(Iterator)?)?|InfiniteIterator|InvalidArgumentException|Iterator(Aggregate|Iterator)?|JsonSerializable|KTaglib_(MPEG_(File|AudioProperties)|Tag|ID3v2_(Tag|(AttachedPicture)?Frame))|Lapack|(Length|Locale|Logic)Exception|LimitIterator|Lua(Closure)?|Mongo(BinData|Client|Code|Collection|CommandCursor|Cursor(Exception)?|Date|DB(Ref)?|DeleteBatch|Grid(FS(Cursor|File)?)|Id|InsertBatch|Int(32|64)|Log|Pool|Regex|ResultException|Timestamp|UpdateBatch|Write(Batch|ConcernException))?|Memcache(d)?|MessageFormatter|MultipleIterator|Mutex|mysqli(_(driver|stmt|warning|result))?|MysqlndUh(Connection|PreparedStatement)|NoRewindIterator|Normalizer|NumberFormatter|OCI-(Collection|Lob)|OuterIterator|(OutOf(Bounds|Range)|Overflow)Exception|ParentIterator|PDO(Statement)?|Phar(Data|FileInfo)?|php_user_filter|Pool|QuickHash(Int(Set|StringHash)|StringIntHash)|Recursive(Array|Caching|Directory|Fallback|Filter|Iterator|Regex|Tree)?Iterator|Reflection(Class|Function(Abstract)?|Method|Object|Parameter|Property|(Zend)?Extension)?|RangeException|Reflector|RegexIterator|ResourceBundle|RuntimeException|RRD(Creator|Graph|Updater)|SAM(Connection|Message)|SCA(_(SoapProxy|LocalProxy))?|SDO_(DAS_(ChangeSummary|Data(Factory|Object)|Relational|Setting|XML(_Document)?)|Data(Factory|Object)|Exception|List|Model_(Property|ReflectionDataObject|Type)|Sequence)|SeekableIterator|Serializable|SessionHandler(Interface)?|SimpleXML(Iterator|Element)|SNMP|Soap(Client|Fault|Header|Param|Server|Var)|SphinxClient|Spoofchecker|Spl(DoublyLinkedList|Enum|File(Info|Object)|FixedArray|(Max|Min)?Heap|Observer|ObjectStorage|(Priority)?Queue|Stack|Subject|Type|TempFileObject)|SQLite(3(Result|Stmt)?|Database|Result|Unbuffered)|stdClass|streamWrapper|SVM(Model)?|Swish(Result(s)?|Search)?|Sync(Event|Mutex|ReaderWriter|Semaphore)|Thread(ed)?|tidy(Node)?|TokyoTyrant(Table|Iterator|Query)?|Transliterator|Traversable|UConverter|(Underflow|UnexpectedValue)Exception|V8Js(Exception)?|Varnish(Admin|Log|Stat)|Worker|Weak(Map|Ref)|XML(Diff\\\\(Base|DOM|File|Memory)|Reader|Writer)|XsltProcessor|Yaf_(Route_(Interface|Map|Regex|Rewrite|Simple|Supervar)|Action_Abstract|Application|Config_(Simple|Ini|Abstract)|Controller_Abstract|Dispatcher|Exception|Loader|Plugin_Abstract|Registry|Request_(Abstract|Simple|Http)|Response_Abstract|Router|Session|View_(Simple|Interface))|Yar_(Client(_Exception)?|Concurrent_Client|Server(_Exception)?)|ZipArchive|ZMQ(Context|Device|Poll|Socket)?)\\b",
					"name": "support.class.builtin.zephir",
					"captures": {
						"1": {
							"name": "punctuation.separator.inheritance.zephir"
						}
					}
				}
			]
		},
		"class-name": {
			"patterns": [
				{
					"begin": "(?i)(?=\\\\?[a-z_0-9]+\\\\)",
					"end": "(?i)([a-z_][a-z_0-9]*)?(?![a-z0-9_\\\\])",
					"endCaptures": {
						"1": {
							"name": "support.class.zephir"
						}
					},
					"patterns": [
						{
							"include": "#namespace"
						}
					]
				},
				{
					"include": "#class-builtin"
				},
				{
					"begin": "(?=[\\\\a-zA-Z_])",
					"end": "(?i)([a-z_][a-z_0-9]*)?(?![a-z0-9_\\\\])",
					"endCaptures": {
						"1": {
							"name": "support.class.zephir"
						}
					},
					"patterns": [
						{
							"include": "#namespace"
						}
					]
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"begin": "/\\*\\*(?=\\s)",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.zephir"
						}
					},
					"end": "\\*/",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.comment.zephir"
						}
					},
					"name": "comment.block.documentation.zephirdoc.zephir",
					"patterns": [
						{
							"include": "#zephir_doc"
						}
					]
				},
				{
					"begin": "/\\*",
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.zephir"
						}
					},
					"end": "\\*/",
					"name": "comment.block.zephir"
				},
				{
					"begin": "(^\\s+)?(?=//)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.whitespace.comment.leading.zephir"
						}
					},
					"end": "(?!\\G)",
					"patterns": [
						{
							"begin": "//",
							"beginCaptures": {
								"0": {
									"name": "punctuation.definition.comment.zephir"
								}
							},
							"end": "\\n",
							"name": "comment.line.double-slash.zephir"
						}
					]
				}
			]
		},
		"constants": {
			"patterns": [
				{
					"match": "(?i)\\b(TRUE|FALSE|NULL|__(FILE|LINE|DIR|FUNCTION|CLASS|METHOD|LINE|NAMESPACE)__|ON|OFF|YES|NO|NL|BR|TAB)\\b",
					"name": "constant.language.zephir"
				},
				{
					"match": "(\\\\)?\\b(DEFAULT_INCLUDE_PATH|EAR_(INSTALL|EXTENSION)_DIR|E_(ALL|COMPILE_(ERROR|WARNING)|CORE_(ERROR|WARNING)|DEPRECATED|ERROR|NOTICE|PARSE|RECOVERABLE_ERROR|STRICT|USER_(DEPRECATED|ERROR|NOTICE|WARNING)|WARNING)|PHP_(ROUND_HALF_(DOWN|EVEN|ODD|UP)|(MAJOR|MINOR|RELEASE)_VERSION|MAXPATHLEN|BINDIR|SHLIB_SUFFIX|SYSCONFDIR|SAPI|CONFIG_FILE_(PATH|SCAN_DIR)|INT_(MAX|SIZE)|ZTS|OS|OUTPUT_HANDLER_(START|CONT|END)|DEBUG|DATADIR|URL_(SCHEME|HOST|USER|PORT|PASS|PATH|QUERY|FRAGMENT)|PREFIX|EXTRA_VERSION|EXTENSION_DIR|EOL|VERSION(_ID)?|WINDOWS_(NT_(SERVER|DOMAIN_CONTROLLER|WORKSTATION)|VERSION_(MAJOR|MINOR)|BUILD|SUITEMASK|SP_(MAJOR|MINOR)|PRODUCTTYPE|PLATFORM)|LIBDIR|LOCALSTATEDIR)|STD(ERR|IN|OUT)|ZEND_(DEBUG_BUILD|THREAD_SAFE))\\b",
					"name": "support.constant.core.zephir",
					"captures": {
						"1": {
							"name": "punctuation.separator.inheritance.zephir"
						}
					}
				},
				{
					"match": "(\\\\)?\\b(__COMPILER_HALT_OFFSET__|AB(MON_(1|2|3|4|5|6|7|8|9|10|11|12)|DAY[1-7])|AM_STR|ASSERT_(ACTIVE|BAIL|CALLBACK_QUIET_EVAL|WARNING)|ALT_DIGITS|CASE_(UPPER|LOWER)|CHAR_MAX|CONNECTION_(ABORTED|NORMAL|TIMEOUT)|CODESET|COUNT_(NORMAL|RECURSIVE)|CREDITS_(ALL|DOCS|FULLPAGE|GENERAL|GROUP|MODULES|QA|SAPI)|CRYPT_(BLOWFISH|EXT_DES|MD5|SHA(256|512)|SALT_LENGTH|STD_DES)|CURRENCY_SYMBOL|D_(T_)?FMT|DATE_(ATOM|COOKIE|ISO8601|RFC(822|850|1036|1123|2822|3339)|RSS|W3C)|DAY_[1-7]|DECIMAL_POINT|DIRECTORY_SEPARATOR|ENT_(COMPAT|IGNORE|(NO)?QUOTES)|EXTR_(IF_EXISTS|OVERWRITE|PREFIX_(ALL|IF_EXISTS|INVALID|SAME)|REFS|SKIP)|ERA(_(D_(T_)?FMT)|T_FMT|YEAR)?|FRAC_DIGITS|GROUPING|HASH_HMAC|HTML_(ENTITIES|SPECIALCHARS)|INF|INFO_(ALL|CREDITS|CONFIGURATION|ENVIRONMENT|GENERAL|LICENSEMODULES|VARIABLES)|INI_(ALL|CANNER_(NORMAL|RAW)|PERDIR|SYSTEM|USER)|INT_(CURR_SYMBOL|FRAC_DIGITS)|LC_(ALL|COLLATE|CTYPE|MESSAGES|MONETARY|NUMERIC|TIME)|LOCK_(EX|NB|SH|UN)|LOG_(ALERT|AUTH(PRIV)?|CRIT|CRON|CONS|DAEMON|DEBUG|EMERG|ERR|INFO|LOCAL[1-7]|LPR|KERN|MAIL|NEWS|NODELAY|NOTICE|NOWAIT|ODELAY|PID|PERROR|WARNING|SYSLOG|UCP|USER)|M_(1_PI|SQRT(1_2|2|3|PI)|2_(SQRT)?PI|PI(_(2|4))?|E(ULER)?|LN(10|2|PI)|LOG(10|2)E)|MON_(1|2|3|4|5|6|7|8|9|10|11|12|DECIMAL_POINT|GROUPING|THOUSANDS_SEP)|N_(CS_PRECEDES|SEP_BY_SPACE|SIGN_POSN)|NAN|NEGATIVE_SIGN|NO(EXPR|STR)|P_(CS_PRECEDES|SEP_BY_SPACE|SIGN_POSN)|PM_STR|POSITIVE_SIGN|PATH(_SEPARATOR|INFO_(EXTENSION|(BASE|DIR|FILE)NAME))|RADIXCHAR|SEEK_(CUR|END|SET)|SORT_(ASC|DESC|LOCALE_STRING|REGULAR|STRING)|STR_PAD_(BOTH|LEFT|RIGHT)|T_FMT(_AMPM)?|THOUSEP|THOUSANDS_SEP|UPLOAD_ERR_(CANT_WRITE|EXTENSION|(FORM|INI)_SIZE|NO_(FILE|TMP_DIR)|OK|PARTIAL)|YES(EXPR|STR))\\b",
					"name": "support.constant.std.zephir",
					"captures": {
						"1": {
							"name": "punctuation.separator.inheritance.zephir"
						}
					}
				},
				{
					"match": "(\\\\)?\\b(GLOB_(MARK|BRACE|NO(SORT|CHECK|ESCAPE)|ONLYDIR|ERR|AVAILABLE_FLAGS)|XML_(SAX_IMPL|(DTD|DOCUMENT(_(FRAG|TYPE))?|HTML_DOCUMENT|NOTATION|NAMESPACE_DECL|PI|COMMENT|DATA_SECTION|TEXT)_NODE|OPTION_(SKIP_(TAGSTART|WHITE)|CASE_FOLDING|TARGET_ENCODING)|ERROR_((BAD_CHAR|(ATTRIBUTE_EXTERNAL|BINARY|PARAM|RECURSIVE)_ENTITY)_REF|MISPLACED_XML_PI|SYNTAX|NONE|NO_(MEMORY|ELEMENTS)|TAG_MISMATCH|INCORRECT_ENCODING|INVALID_TOKEN|DUPLICATE_ATTRIBUTE|UNCLOSED_(CDATA_SECTION|TOKEN)|UNDEFINED_ENTITY|UNKNOWN_ENCODING|JUNK_AFTER_DOC_ELEMENT|PARTIAL_CHAR|EXTERNAL_ENTITY_HANDLING|ASYNC_ENTITY)|ENTITY_(((REF|DECL)_)?NODE)|ELEMENT(_DECL)?_NODE|LOCAL_NAMESPACE|ATTRIBUTE_(NMTOKEN(S)?|NOTATION|NODE)|CDATA|ID(REF(S)?)?|DECL_NODE|ENTITY|ENUMERATION)|MHASH_(RIPEMD(128|160|256|320)|GOST|MD(2|4|5)|SHA(1|224|256|384|512)|SNEFRU256|HAVAL(128|160|192|224|256)|CRC23(B)?|TIGER(128|160)?|WHIRLPOOL|ADLER32)|MYSQL_(BOTH|NUM|CLIENT_(SSL|COMPRESS|IGNORE_SPACE|INTERACTIVE|ASSOC))|MYSQLI_(REPORT_(STRICT|INDEX|OFF|ERROR|ALL)|REFRESH_(GRANT|MASTER|BACKUP_LOG|STATUS|SLAVE|HOSTS|THREADS|TABLES|LOG)|READ_DEFAULT_(FILE|GROUP)|(GROUP|MULTIPLE_KEY|BINARY|BLOB)_FLAG|BOTH|STMT_ATTR_(CURSOR_TYPE|UPDATE_MAX_LENGTH|PREFETCH_ROWS)|STORE_RESULT|SERVER_QUERY_(NO_((GOOD_)?INDEX_USED)|WAS_SLOW)|SET_(CHARSET_NAME|FLAG)|NO_(DEFAULT_VALUE_FLAG|DATA)|NOT_NULL_FLAG|NUM(_FLAG)?|CURSOR_TYPE_(READ_ONLY|SCROLLABLE|NO_CURSOR|FOR_UPDATE)|CLIENT_(SSL|NO_SCHEMA|COMPRESS|IGNORE_SPACE|INTERACTIVE|FOUND_ROWS)|TYPE_(GEOMETRY|((MEDIUM|LONG|TINY)_)?BLOB|BIT|SHORT|STRING|SET|YEAR|NULL|NEWDECIMAL|NEWDATE|CHAR|TIME(STAMP)?|TINY|INT24|INTERVAL|DOUBLE|DECIMAL|DATE(TIME)?|ENUM|VAR_STRING|FLOAT|LONG(LONG)?)|TIME_STAMP_FLAG|INIT_COMMAND|ZEROFILL_FLAG|ON_UPDATE_NOW_FLAG|OPT_(NET_((CMD|READ)_BUFFER_SIZE)|CONNECT_TIMEOUT|INT_AND_FLOAT_NATIVE|LOCAL_INFILE)|DEBUG_TRACE_ENABLED|DATA_TRUNCATED|USE_RESULT|(ENUM|(PART|PRI|UNIQUE)_KEY|UNSIGNED)_FLAG|ASSOC|ASYNC|AUTO_INCREMENT_FLAG)|MCRYPT_(RC(2|6)|RIJNDAEL_(128|192|256)|RAND|GOST|XTEA|MODE_(STREAM|NOFB|CBC|CFB|OFB|ECB)|MARS|BLOWFISH(_COMPAT)?|SERPENT|SKIPJACK|SAFER(64|128|PLUS)|CRYPT|CAST_(128|256)|TRIPLEDES|THREEWAY|TWOFISH|IDEA|(3)?DES|DECRYPT|DEV_(U)?RANDOM|PANAMA|ENCRYPT|ENIGNA|WAKE|LOKI97|ARCFOUR(_IV)?)|STREAM_(REPORT_ERRORS|MUST_SEEK|MKDIR_RECURSIVE|BUFFER_(NONE|FULL|LINE)|SHUT_(RD)?WR|SOCK_(RDM|RAW|STREAM|SEQPACKET|DGRAM)|SERVER_(BIND|LISTEN)|NOTIFY_(REDIRECTED|RESOLVE|MIME_TYPE_IS|SEVERITY_(INFO|ERR|WARN)|COMPLETED|CONNECT|PROGRESS|FILE_SIZE_IS|FAILURE|AUTH_(REQUIRED|RESULT))|CRYPTO_METHOD_((SSLv2(3)?|SSLv3|TLS)_(CLIENT|SERVER))|CLIENT_((ASYNC_)?CONNECT|PERSISTENT)|CAST_(AS_STREAM|FOR_SELECT)|(IGNORE|IS)_URL|IPPROTO_(RAW|TCP|ICMP|IP|UDP)|OOB|OPTION_(READ_(BUFFER|TIMEOUT)|BLOCKING|WRITE_BUFFER)|URL_STAT_(LINK|QUIET)|USE_PATH|PEEK|PF_(INET(6)?|UNIX)|ENFORCE_SAFE_MODE|FILTER_(ALL|READ|WRITE))|SUNFUNCS_RET_(DOUBLE|STRING|TIMESTAMP)|SQLITE_(READONLY|ROW|MISMATCH|MISUSE|BOTH|BUSY|SCHEMA|NOMEM|NOTFOUND|NOTADB|NOLFS|NUM|CORRUPT|CONSTRAINT|CANTOPEN|TOOBIG|INTERRUPT|INTERNAL|IOERR|OK|DONE|PROTOCOL|PERM|ERROR|EMPTY|FORMAT|FULL|LOCKED|ABORT|ASSOC|AUTH)|SQLITE3_(BOTH|BLOB|NUM|NULL|TEXT|INTEGER|OPEN_(READ(ONLY|WRITE)|CREATE)|FLOAT_ASSOC)|CURL(M_(BAD_((EASY)?HANDLE)|CALL_MULTI_PERFORM|INTERNAL_ERROR|OUT_OF_MEMORY|OK)|MSG_DONE|SSH_AUTH_(HOST|NONE|DEFAULT|PUBLICKEY|PASSWORD|KEYBOARD)|CLOSEPOLICY_(SLOWEST|CALLBACK|OLDEST|LEAST_(RECENTLY_USED|TRAFFIC)|INFO_(REDIRECT_(COUNT|TIME)|REQUEST_SIZE|SSL_VERIFYRESULT|STARTTRANSFER_TIME|(SIZE|SPEED)_(DOWNLOAD|UPLOAD)|HTTP_CODE|HEADER_(OUT|SIZE)|NAMELOOKUP_TIME|CONNECT_TIME|CONTENT_(TYPE|LENGTH_(DOWNLOAD|UPLOAD))|CERTINFO|TOTAL_TIME|PRIVATE|PRETRANSFER_TIME|EFFECTIVE_URL|FILETIME)|OPT_(RESUME_FROM|RETURNTRANSFER|REDIR_PROTOCOLS|REFERER|READ(DATA|FUNCTION)|RANGE|RANDOM_FILE|MAX(CONNECTS|REDIRS)|BINARYTRANSFER|BUFFERSIZE|SSH_(HOST_PUBLIC_KEY_MD5|(PRIVATE|PUBLIC)_KEYFILE)|AUTH_TYPES)|SSL(CERT(TYPE|PASSWD)?|ENGINE(_DEFAULT)?|VERSION|KEY(TYPE|PASSWD)?)|SSL_(CIPHER_LIST|VERIFY(HOST|PEER))|STDERR|HTTP(GET|HEADER|200ALIASES|_VERSION|PROXYTUNNEL|AUTH)|HEADER(FUNCTION)?|NO(BODY|SIGNAL|PROGRESS)|NETRC|CRLF|CONNECTTIMEOUT(_MS)?|COOKIE(SESSION|JAR|FILE)?|CUSTOMREQUEST|CERTINFO|CLOSEPOLICY|CA(INFO|PATH)|TRANSFERTEXT|TCP_NODELAY|TIME(CONDITION|OUT(_MS)?|VALUE)|INTERFACE|INFILE(SIZE)?|IPRESOLVE|DNS_(CACHE_TIMEOUT|USE_GLOBAL_CACHE)|URL|USER(AGENT|PWD)|UNRESTRICTED_AUTH|UPLOAD|PRIVATE|PROGRESSFUNCTION|PROXY(TYPE|USERPWD|PORT|AUTH)?|PROTOCOLS|PORT|POST(REDIR|QUOTE|FIELDS)?|PUT|EGDSOCKET|ENCODING|VERBOSE|KRB4LEVEL|KEYPASSWD|QUOTE|FRESH_CONNECT|FTP(APPEND|LISTONLY|PORT|SSLAUTH)|FTP_(SSL|SKIP_PASV_IP|CREATE_MISSING_DIRS|USE_EP(RT|SV)|FILEMETHOD)|FILE(TIME)?|FORBID_REUSE|FOLLOWLOCATION|FAILONERROR|WRITE(FUNCTION|HEADER)|LOW_SPEED_(LIMIT|TIME)|AUTOREFERER)|PROXY_(HTTP|SOCKS(4|5))|PROTO_(SCP|SFTP|HTTP(S)?|TELNET|TFTP|DICT|FTP(S)?|FILE|LDAP(S)?|ALL)|E_((RECV|READ)_ERROR|GOT_NOTHING|MALFORMAT_USER|BAD_(CONTENT_ENCODING|CALLING_ORDER|PASSWORD_ENTERED|FUNCTION_ARGUMENT)|SSH|SSL_(CIPHER|CONNECT_ERROR|CERTPROBLEM|CACERT|PEER_CERTIFICATE|ENGINE_(NOTFOUND|SETFAILED))|SHARE_IN_USE|SEND_ERROR|HTTP_(RANGE_ERROR|NOT_FOUND|PORT_FAILED|POST_ERROR)|COULDNT_(RESOLVE_(HOST|PROXY)|CONNECT)|TOO_MANY_REDIRECTS|TELNET_OPTION_SYNTAX|OBSOLETE|OUT_OF_MEMORY|OPERATION|TIMEOUTED|OK|URL_MALFORMAT(_USER)?|UNSUPPORTED_PROTOCOL|UNKNOWN_TELNET_OPTION|PARTIAL_FILE|FTP_(BAD_DOWNLOAD_RESUME|SSL_FAILED|COULDNT_(RETR_FILE|GET_SIZE|STOR_FILE|SET_(BINARY|ASCII)|USE_REST)|CANT_(GET_HOST|RECONNECT)|USER_PASSWORD_INCORRECT|PORT_FAILED|QUOTE_ERROR|WRITE_ERROR|WEIRD_((PASS|PASV|SERVER|USER)_REPLY|227_FORMAT)|ACCESS_DENIED)|FILESIZE_EXCEEDED|FILE_COULDNT_READ_FILE|FUNCTION_NOT_FOUND|FAILED_INIT|WRITE_ERROR|LIBRARY_NOT_FOUND|LDAP_(SEARCH_FAILED|CANNOT_BIND|INVALID_URL)|ABORTED_BY_CALLBACK)|VERSION_NOW|FTP(METHOD_(MULTI|SINGLE|NO)CWD|SSL_(ALL|NONE|CONTROL|TRY)|AUTH_(DEFAULT|SSL|TLS))|AUTH_(ANY(SAFE)?|BASIC|DIGEST|GSSNEGOTIATE|NTLM))|CURL_(HTTP_VERSION_(1_(0|1)|NONE)|NETRC_(REQUIRED|IGNORED|OPTIONAL)|TIMECOND_(IF(UN)?MODSINCE|LASTMOD)|IPRESOLVE_(V(4|6)|WHATEVER)|VERSION_(SSL|IPV6|KERBEROS4|LIBZ))|IMAGETYPE_(GIF|XBM|BMP|SWF|COUNT|TIFF_(MM|II)|ICO|IFF|UNKNOWN|JB2|JPX|JP2|JPC|JPEG(2000)?|PSD|PNG|WBMP)|INPUT_(REQUEST|GET|SERVER|SESSION|COOKIE|POST|ENV)|ICONV_(MIME_DECODE_(STRICT|CONTINUE_ON_ERROR)|IMPL|VERSION)|DNS_(MX|SRV|SOA|HINFO|NS|NAPTR|CNAME|TXT|PTR|ANY|ALL|AAAA|A(6)?)|DOM(STRING_SIZE_ERR)|DOM_((SYNTAX|HIERARCHY_REQUEST|NO_(MODIFICATION_ALLOWED|DATA_ALLOWED)|NOT_(FOUND|SUPPORTED)|NAMESPACE|INDEX_SIZE|USE_ATTRIBUTE|VALID_(MODIFICATION|STATE|CHARACTER|ACCESS)|PHP|VALIDATION|WRONG_DOCUMENT)_ERR)|JSON_(HEX_(TAG|QUOT|AMP|APOS)|NUMERIC_CHECK|ERROR_(SYNTAX|STATE_MISMATCH|NONE|CTRL_CHAR|DEPTH|UTF8)|FORCE_OBJECT)|PREG_((D_UTF8(_OFFSET)?|NO|INTERNAL|(BACKTRACK|RECURSION)_LIMIT)_ERROR|GREP_INVERT|SPLIT_(NO_EMPTY|(DELIM|OFFSET)_CAPTURE)|SET_ORDER|OFFSET_CAPTURE|PATTERN_ORDER)|PSFS_(PASS_ON|ERR_FATAL|FEED_ME|FLAG_(NORMAL|FLUSH_(CLOSE|INC)))|PCRE_VERSION|POSIX_((F|R|W|X)_OK|S_IF(REG|BLK|SOCK|CHR|IFO))|FNM_(NOESCAPE|CASEFOLD|PERIOD|PATHNAME)|FILTER_(REQUIRE_(SCALAR|ARRAY)|NULL_ON_FAILURE|CALLBACK|DEFAULT|UNSAFE_RAW|SANITIZE_(MAGIC_QUOTES|STRING|STRIPPED|SPECIAL_CHARS|NUMBER_(INT|FLOAT)|URL|EMAIL|ENCODED|FULL_SPCIAL_CHARS)|VALIDATE_(REGEXP|BOOLEAN|INT|IP|URL|EMAIL|FLOAT)|FORCE_ARRAY|FLAG_(SCHEME_REQUIRED|STRIP_(BACKTICK|HIGH|LOW)|HOST_REQUIRED|NONE|NO_(RES|PRIV)_RANGE|ENCODE_QUOTES|IPV(4|6)|PATH_REQUIRED|EMPTY_STRING_NULL|ENCODE_(HIGH|LOW|AMP)|QUERY_REQUIRED|ALLOW_(SCIENTIFIC|HEX|THOUSAND|OCTAL|FRACTION)))|FILE_(BINARY|SKIP_EMPTY_LINES|NO_DEFAULT_CONTEXT|TEXT|IGNORE_NEW_LINES|USE_INCLUDE_PATH|APPEND)|FILEINFO_(RAW|MIME(_(ENCODING|TYPE))?|SYMLINK|NONE|CONTINUE|DEVICES|PRESERVE_ATIME)|FORCE_(DEFLATE|GZIP)|LIBXML_(XINCLUDE|NSCLEAN|NO(XMLDECL|BLANKS|NET|CDATA|ERROR|EMPTYTAG|ENT|WARNING)|COMPACT|DTD(VALID|LOAD|ATTR)|((DOTTED|LOADED)_)?VERSION|PARSEHUGE|ERR_(NONE|ERROR|FATAL|WARNING)))\\b",
					"name": "support.constant.ext.zephir",
					"captures": {
						"1": {
							"name": "punctuation.separator.inheritance.zephir"
						}
					}
				},
				{
					"match": "(\\\\)?\\b(T_(RETURN|REQUIRE(_ONCE)?|GOTO|GLOBAL|(MINUS|MOD|MUL|XOR)_EQUAL|METHOD_C|ML_COMMENT|BREAK|BOOL_CAST|BOOLEAN_(AND|OR)|BAD_CHARACTER|SR(_EQUAL)?|STRING(_CAST|VARNAME)?|START_HEREDOC|STATIC|SWITCH|SL(_EQUAL)?|HALT_COMPILER|NS_(C|SEPARATOR)|NUM_STRING|NEW|NAMESPACE|CHARACTER|COMMENT|CONSTANT(_ENCAPSED_STRING)?|CONCAT_EQUAL|CONTINUE|CURLY_OPEN|CLOSE_TAG|CLONE|CLASS(_C)?|CASE|CATCH|TRY|THROW|IMPLEMENTS|ISSET|IS_((GREATER|SMALLER)_OR_EQUAL|(NOT_)?(IDENTICAL|EQUAL))|INSTANCEOF|INCLUDE(_ONCE)?|INC|INT_CAST|INTERFACE|INLINE_HTML|IF|OR_EQUAL|OBJECT_(CAST|OPERATOR)|OPEN_TAG(_WITH_ECHO)?|OLD_FUNCTION|DNUMBER|DIR|DIV_EQUAL|DOC_COMMENT|DOUBLE_(ARROW|CAST|COLON)|DOLLAR_OPEN_CURLY_BRACES|DO|DEC|DECLARE|DEFAULT|USE|UNSET(_CAST)?|PRINT|PRIVATE|PROTECTED|PUBLIC|PLUS_EQUAL|PAAMAYIM_NEKUDOTAYIM|EXTENDS|EXIT|EMPTY|ENCAPSED_AND_WHITESPACE|END(SWITCH|IF|DECLARE|FOR(EACH)?|WHILE)|END_HEREDOC|ECHO|EVAL|ELSE(IF)?|VAR(IABLE)?|FINAL|FILE|FOR(EACH)?|FUNC_C|FUNCTION|WHITESPACE|WHILE|LNUMBER|LIST|LINE|LOGICAL_(AND|OR|XOR)|ARRAY_(CAST)?|ABSTRACT|AS|AND_EQUAL))\\b",
					"name": "support.constant.parser-token.zephir",
					"captures": {
						"1": {
							"name": "punctuation.separator.inheritance.zephir"
						}
					}
				},
				{
					"match": "(?i)[a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*",
					"name": "constant.other.zephir"
				}
			]
		},
		"function-definition": {
			"begin": "(?i)\\b(function|fn)\\s*(?=\\()",
			"beginCaptures": {
				"1": {
					"name": "storage.type.function.zephir"
				}
			},
			"end": "(?={)",
			"name": "meta.function.closure.zephir",
			"patterns": [
				{
					"begin": "\\(",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.parameters.begin.bracket.round.zephir"
						}
					},
					"contentName": "meta.function.parameters.zephir",
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.parameters.end.bracket.round.zephir"
						}
					},
					"patterns": [
						{
							"include": "#function-parameters"
						}
					]
				},
				{
					"begin": "(?i)(use)\\s*(\\()",
					"beginCaptures": {
						"1": {
							"name": "keyword.other.function.use.zephir"
						},
						"2": {
							"name": "punctuation.definition.parameters.begin.bracket.round.zephir"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.parameters.end.bracket.round.zephir"
						}
					},
					"patterns": [
						{
							"captures": {
								"1": {
									"name": "variable.other.zephir"
								},
								"2": {
									"name": "storage.modifier.reference.zephir"
								},
								"3": {
									"name": "punctuation.definition.variable.zephir"
								}
							},
							"match": "(?i)((&)?\\s*(\\$+)?[a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)\\s*(?=,|\\))",
							"name": "meta.function.closure.use.zephir"
						}
					]
				}
			]
		},
		"function-parameters": {
			"patterns": [
				{
					"include": "#comments"
				},
				{
					"match": ",",
					"name": "punctuation.separator.delimiter.zephir"
				},
				{
					"begin": "(?i)(array)\\s+((&)?\\s*(\\$+)?[a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)\\s*(=)\\s*(array)\\s*(\\()",
					"beginCaptures": {
						"1": {
							"name": "storage.type.zephir"
						},
						"2": {
							"name": "variable.other.zephir"
						},
						"3": {
							"name": "storage.modifier.reference.zephir"
						},
						"4": {
							"name": "punctuation.definition.variable.zephir"
						},
						"5": {
							"name": "keyword.operator.assignment.zephir"
						},
						"6": {
							"name": "support.function.construct.zephir"
						},
						"7": {
							"name": "punctuation.definition.array.begin.bracket.round.zephir"
						}
					},
					"contentName": "meta.array.zephir",
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.array.end.bracket.round.zephir"
						}
					},
					"name": "meta.function.parameter.array.zephir",
					"patterns": [
						{
							"include": "#comments"
						},
						{
							"include": "#strings"
						},
						{
							"include": "#numbers"
						}
					]
				},
				{
					"match": "(?i)(array|callable)\\s+((&)?\\s*(\\$+)?[a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)(?:\\s*(=)\\s*(?:(null)|(\\[)((?>[^\\[\\]]+|\\[\\g<8>\\])*)(\\])|((?:\\S*?\\(\\))|(?:\\S*?))))?\\s*(?=,|\\)|/[/*]|\\#|$)",
					"name": "meta.function.parameter.array.zephir",
					"captures": {
						"1": {
							"name": "storage.type.zephir"
						},
						"2": {
							"name": "variable.other.zephir"
						},
						"3": {
							"name": "storage.modifier.reference.zephir"
						},
						"4": {
							"name": "punctuation.definition.variable.zephir"
						},
						"5": {
							"name": "keyword.operator.assignment.zephir"
						},
						"6": {
							"name": "constant.language.zephir"
						},
						"7": {
							"name": "punctuation.section.array.begin.zephir"
						},
						"8": {
							"patterns": [
								{
									"include": "#parameter-default-types"
								}
							]
						},
						"9": {
							"name": "punctuation.section.array.end.zephir"
						},
						"10": {
							"name": "invalid.illegal.non-null-typehinted.zephir"
						}
					}
				},
				{
					"include": "#typehinting"
				},
				{
					"begin": "(?i)(\\\\?(?:[a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*\\\\)*)([a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)\\s+((&)?\\s*(\\.\\.\\.)?(\\$+)?[a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)",
					"beginCaptures": {
						"1": {
							"name": "support.other.namespace.zephir",
							"patterns": [
								{
									"match": "(?i)[a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*",
									"name": "storage.type.zephir"
								},
								{
									"match": "\\\\",
									"name": "punctuation.separator.inheritance.zephir"
								}
							]
						},
						"2": {
							"name": "storage.type.zephir"
						},
						"3": {
							"name": "variable.other.zephir"
						},
						"4": {
							"name": "storage.modifier.reference.zephir"
						},
						"5": {
							"name": "keyword.operator.variadic.zephir"
						},
						"6": {
							"name": "punctuation.definition.variable.zephir"
						}
					},
					"end": "(?=,|\\)|/[/*]|\\#)",
					"name": "meta.function.parameter.typehinted.zephir",
					"patterns": [
						{
							"begin": "=",
							"beginCaptures": {
								"0": {
									"name": "keyword.operator.assignment.zephir"
								}
							},
							"end": "(?=,|\\)|/[/*]|\\#)",
							"patterns": [
								{
									"include": "$self"
								}
							]
						}
					]
				},
				{
					"captures": {
						"1": {
							"name": "variable.other.zephir"
						},
						"2": {
							"name": "storage.modifier.reference.zephir"
						},
						"3": {
							"name": "keyword.operator.variadic.zephir"
						},
						"4": {
							"name": "punctuation.definition.variable.zephir"
						}
					},
					"match": "(?i)((&)?\\s*(\\.\\.\\.)?(\\$+)?[a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)\\s*(?=,|\\)|/[/*]|\\#|$)",
					"name": "meta.function.parameter.no-default.zephir"
				},
				{
					"begin": "(?i)((&)?\\s*(\\.\\.\\.)?(\\$+)?[a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)\\s*(=)\\s*(?:(\\[)((?>[^\\[\\]]+|\\[\\g<6>\\])*)(\\]))?",
					"beginCaptures": {
						"1": {
							"name": "variable.other.zephir"
						},
						"2": {
							"name": "storage.modifier.reference.zephir"
						},
						"3": {
							"name": "keyword.operator.variadic.zephir"
						},
						"4": {
							"name": "punctuation.definition.variable.zephir"
						},
						"5": {
							"name": "keyword.operator.assignment.zephir"
						},
						"6": {
							"name": "punctuation.section.array.begin.zephir"
						},
						"7": {
							"patterns": [
								{
									"include": "#parameter-default-types"
								}
							]
						},
						"8": {
							"name": "punctuation.section.array.end.zephir"
						}
					},
					"end": "(?=,|\\)|/[/*]|\\#)",
					"name": "meta.function.parameter.default.zephir",
					"patterns": [
						{
							"include": "#parameter-default-types"
						}
					]
				}
			]
		},
		"namespace": {
			"begin": "(?i)(?:(namespace)|[a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)?(\\\\)",
			"beginCaptures": {
				"1": {
					"name": "variable.language.namespace.zephir"
				},
				"2": {
					"name": "punctuation.separator.inheritance.zephir"
				}
			},
			"end": "(?i)(?![a-z0-9_\\x{7f}-\\x{7fffffff}]*\\\\)",
			"name": "support.other.namespace.zephir",
			"patterns": [
				{
					"match": "\\\\",
					"name": "punctuation.separator.inheritance.zephir"
				}
			]
		},
		"function-call": {
			"patterns": [
				{
					"begin": "(?i)(\\\\?(?<![a-z0-9_\\x{7f}-\\x{7fffffff}])[a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*(?:\\\\[a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)+)\\s*(\\()",
					"beginCaptures": {
						"1": {
							"patterns": [
								{
									"include": "#namespace"
								},
								{
									"match": "(?i)[a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*",
									"name": "entity.name.function.zephir"
								}
							]
						},
						"2": {
							"name": "punctuation.definition.arguments.begin.bracket.round.zephir"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.arguments.end.bracket.round.zephir"
						}
					},
					"name": "meta.function-call.zephir",
					"patterns": [
						{
							"include": "$self"
						}
					]
				},
				{
					"begin": "(?i)(\\\\)?(?<![a-z0-9_\\x{7f}-\\x{7fffffff}])([a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)\\s*(\\()",
					"beginCaptures": {
						"1": {
							"patterns": [
								{
									"include": "#namespace"
								}
							]
						},
						"2": {
							"patterns": [
								{
									"match": "(?i)[a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*",
									"name": "entity.name.function.zephir"
								}
							]
						},
						"3": {
							"name": "punctuation.definition.arguments.begin.bracket.round.zephir"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.arguments.end.bracket.round.zephir"
						}
					},
					"name": "meta.function-call.zephir",
					"patterns": [
						{
							"include": "$self"
						}
					]
				},
				{
					"match": "(?i)\\b(print|echo)\\b",
					"name": "support.function.construct.output.zephir"
				}
			]
		},
		"instantiation": {
			"begin": "(?i)(new)\\s+",
			"beginCaptures": {
				"1": {
					"name": "keyword.other.new.zephir"
				}
			},
			"end": "(?i)(?=[^a-z0-9_\\x{7f}-\\x{7fffffff}\\\\])",
			"patterns": [
				{
					"match": "(?i)(parent|static|self)(?![a-z0-9_\\x{7f}-\\x{7fffffff}])",
					"name": "storage.type.zephir"
				},
				{
					"include": "#class-name"
				},
				{
					"include": "#variable-name"
				}
			]
		},
		"typeof": {
			"begin": "(?i)\\b(typeof)\\s+(?=[\\\\$a-z_])",
			"beginCaptures": {
				"1": {
					"name": "keyword.operator.type.zephir"
				}
			},
			"end": "(?i)(?=[^\\\\$a-z0-9_\\x{7f}-\\x{7fffffff}])",
			"patterns": [
			]
		},
		"typehinting": {
			"begin": "<",
			"captures": {
				"0": {
					"name": "keyword.other.angle-bracket.zephir"
				}
			},
			"comment": "Angle brackets may be used around a type hinting.",
			"end": ">|(\\s)",
			"endCaptures": {
				"0": {
					"name": "keyword.other.angle-bracket.zephir"
				},
				"1": {
					"name": "invalid.illegal.missing.angle-bracket.zephir"
				}
			},
			"name": "meta.function.parameter.typehinted.zephir",
			"patterns": [
				{
					"include": "#class-name"
				}
			]
		},
		"instanceof": {
			"begin": "(?i)\\b(instanceof)\\s+(?=[\\\\$a-z_])",
			"beginCaptures": {
				"1": {
					"name": "keyword.operator.type.zephir"
				}
			},
			"end": "(?i)(?=[^\\\\$a-z0-9_\\x{7f}-\\x{7fffffff}])",
			"patterns": [
				{
					"include": "#class-name"
				},
				{
					"include": "#variable-name"
				}
			]
		},
		"interpolation": {
			"patterns": [
				{
					"match": "\\\\[0-7]{1,3}",
					"name": "constant.character.escape.octal.zephir"
				},
				{
					"match": "\\\\x[0-9A-Fa-f]{1,2}",
					"name": "constant.character.escape.hex.zephir"
				},
				{
					"match": "\\\\u{[0-9A-Fa-f]+}",
					"name": "constant.character.escape.unicode.zephir"
				}
			]
		},
		"interpolation_double_quoted": {
			"patterns": [
				{
					"match": "\\\\\"",
					"name": "constant.character.escape.zephir"
				},
				{
					"include": "#interpolation"
				}
			]
		},
		"parameter-default-types": {
			"patterns": [
				{
					"include": "#strings"
				},
				{
					"include": "#numbers"
				},
				{
					"match": "=>",
					"name": "keyword.operator.key.zephir"
				},
				{
					"match": "=",
					"name": "keyword.operator.assignment.zephir"
				},
				{
					"begin": "(array)\\s*(\\()",
					"beginCaptures": {
						"1": {
							"name": "support.function.construct.zephir"
						},
						"2": {
							"name": "punctuation.definition.array.begin.bracket.round.zephir"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.array.end.bracket.round.zephir"
						}
					},
					"name": "meta.array.zephir",
					"patterns": [
						{
							"include": "#parameter-default-types"
						}
					]
				},
				{
					"include": "#instantiation"
				},
				{
					"begin": "(?i)(?=[a-z0-9_\\x{7f}-\\x{7fffffff}\\\\]+(::)([a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)?)",
					"end": "(?i)(::)([a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)?",
					"endCaptures": {
						"1": {
							"name": "keyword.operator.class.zephir"
						},
						"2": {
							"name": "constant.other.class.zephir"
						}
					},
					"patterns": [
						{
							"include": "#class-name"
						}
					]
				},
				{
					"include": "#constants"
				}
			]
		},
		"zephir_doc": {
			"patterns": [
				{
					"match": "^(?!\\s*\\*).*?(?:(?=\\*\\/)|$\\n?)",
					"name": "invalid.illegal.missing-asterisk.zephirdoc.zephir"
				},
				{
					"captures": {
						"1": {
							"name": "keyword.other.zephirdoc.zephir"
						},
						"3": {
							"name": "storage.modifier.zephir"
						},
						"4": {
							"name": "invalid.illegal.wrong-access-type.zephirdoc.zephir"
						}
					},
					"match": "^\\s*\\*\\s*(@access)\\s+((public|private|protected)|(.+))\\s*$"
				},
				{
					"captures": {
						"1": {
							"name": "keyword.other.zephirdoc.zephir"
						},
						"2": {
							"name": "markup.underline.link.zephir"
						}
					},
					"match": "(@xlink)\\s+(.+)\\s*$"
				},
				{
					"begin": "(@(?:global|param|property(-(read|write))?|return|throws|var))\\s+(?=[A-Za-z_\\x{7f}-\\x{7fffffff}\\\\]|\\()",
					"beginCaptures": {
						"1": {
							"name": "keyword.other.zephirdoc.zephir"
						}
					},
					"end": "(?=\\s|\\*/)",
					"contentName": "meta.other.type.zephirdoc.zephir",
					"patterns": [
						{
							"include": "#zephir_doc_types_array_multiple"
						},
						{
							"include": "#zephir_doc_types_array_single"
						},
						{
							"include": "#zephir_doc_types"
						}
					]
				},
				{
					"match": "@(api|abstract|author|category|copyright|example|global|inherit[Dd]oc|internal|license|link|method|property(-(read|write))?|package|param|return|see|since|source|static|subpackage|throws|todo|fixme|var|version|uses|deprecated|final|ignore)\\b",
					"name": "keyword.other.zephirdoc.zephir"
				},
				{
					"captures": {
						"1": {
							"name": "keyword.other.zephirdoc.zephir"
						}
					},
					"match": "{(@(link|inherit[Dd]oc)).+?}",
					"name": "meta.tag.inline.zephirdoc.zephir"
				}
			]
		},
		"zephir_doc_types": {
			"match": "(?i)[a-z_\\x{7f}-\\x{7fffffff}\\\\][a-z0-9_\\x{7f}-\\x{7fffffff}\\\\]*(\\|[a-z_\\x{7f}-\\x{7fffffff}\\\\][a-z0-9_\\x{7f}-\\x{7fffffff}\\\\]*)*",
			"captures": {
				"0": {
					"patterns": [
						{
							"match": "\\b(int(eger)?|uint|bool(ean)?|float|double|u?long|u?char|string|void|unsigned|null|mixed|array|self|static|callback|resource|object|false|true)\\b",
							"name": "keyword.other.type.zephir"
						},
						{
							"include": "#class-name"
						},
						{
							"match": "\\|",
							"name": "punctuation.separator.delimiter.zephir"
						}
					]
				}
			}
		},
		"zephir_doc_types_array_multiple": {
			"begin": "\\(",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.type.begin.bracket.round.zephirdoc.zephir"
				}
			},
			"end": "(\\))(\\[\\])|(?=\\*/)",
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.type.end.bracket.round.zephirdoc.zephir"
				},
				"2": {
					"name": "keyword.other.array.zephirdoc.zephir"
				}
			},
			"patterns": [
				{
					"include": "#zephir_doc_types_array_multiple"
				},
				{
					"include": "#zephir_doc_types_array_single"
				},
				{
					"include": "#zephir_doc_types"
				},
				{
					"match": "\\|",
					"name": "punctuation.separator.delimiter.zephir"
				}
			]
		},
		"zephir_doc_types_array_single": {
			"match": "(?i)([a-z_\\x{7f}-\\x{7fffffff}\\\\][a-z0-9_\\x{7f}-\\x{7fffffff}\\\\]*)(\\[\\])",
			"captures": {
				"1": {
					"patterns": [
						{
							"include": "#zephir_doc_types"
						}
					]
				},
				"2": {
					"name": "keyword.other.array.zephirdoc.zephir"
				}
			}
		},
		"numbers": {
			"patterns": [
				{
					"match": "0[xX][0-9a-fA-F]+",
					"name": "constant.numeric.hex.zephir"
				},
				{
					"match": "0[bB][01]+",
					"name": "constant.numeric.binary.zephir"
				},
				{
					"match": "0[0-7]+",
					"name": "constant.numeric.octal.zephir"
				},
				{
					"match": "(?:[0-9]*(\\.)[0-9]+(?:[eE][+-]?[0-9]+)?|[0-9]+(\\.)[0-9]*(?:[eE][+-]?[0-9]+)?|[0-9]+[eE][+-]?[0-9]+)",
					"name": "constant.numeric.decimal.zephir",
					"captures": {
						"1": {
							"name": "punctuation.separator.decimal.period.zephir"
						},
						"2": {
							"name": "punctuation.separator.decimal.period.zephir"
						}
					}
				},
				{
					"match": "0|[1-9][0-9]*",
					"name": "constant.numeric.decimal.zephir"
				}
			]
		},
		"object": {
			"patterns": [
				{
					"begin": "(->)(\\$?{)",
					"beginCaptures": {
						"1": {
							"name": "keyword.operator.class.zephir"
						},
						"2": {
							"name": "punctuation.definition.variable.zephir"
						}
					},
					"end": "\\}",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.variable.zephir"
						}
					},
					"patterns": [
						{
							"include": "$self"
						}
					]
				},
				{
					"begin": "(?i)(->)([a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)\\s*(\\()",
					"beginCaptures": {
						"1": {
							"name": "keyword.operator.class.zephir"
						},
						"2": {
							"name": "entity.name.function.zephir"
						},
						"3": {
							"name": "punctuation.definition.arguments.begin.bracket.round.zephir"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.arguments.end.bracket.round.zephir"
						}
					},
					"name": "meta.method-call.zephir",
					"patterns": [
						{
							"include": "$self"
						}
					]
				},
				{
					"captures": {
						"1": {
							"name": "keyword.operator.class.zephir"
						},
						"2": {
							"name": "variable.other.property.zephir"
						},
						"3": {
							"name": "punctuation.definition.variable.zephir"
						}
					},
					"match": "(?i)(->)((\\$+)?[a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)?"
				}
			]
		},
		"regex-double-quoted": {
			"begin": "\"/(?=(\\\\.|[^\"/])++/[imsxeADSUXu]*\")",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.zephir"
				}
			},
			"end": "(/)([imsxeADSUXu]*)(\")",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.zephir"
				}
			},
			"name": "string.regexp.double-quoted.zephir",
			"patterns": [
				{
					"match": "[$^+*]",
					"name": "keyword.operator.regexp.zephir"
				}
			]
		},
		"scope-resolution": {
			"patterns": [
				{
					"match": "(?i)([a-z_\\x{7f}-\\x{7fffffff}\\\\][a-z0-9_\\x{7f}-\\x{7fffffff}\\\\]*)(?=\\s*::)",
					"captures": {
						"1": {
							"patterns": [
								{
									"match": "\\b(self|static|parent)\\b",
									"name": "storage.type.zephir"
								},
								{
									"include": "#class-name"
								},
								{
									"include": "#variable-name"
								}
							]
						}
					}
				},
				{
					"begin": "(?i)(::)\\s*([a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)\\s*(\\()",
					"beginCaptures": {
						"1": {
							"name": "keyword.operator.class.zephir"
						},
						"2": {
							"name": "entity.name.function.zephir"
						},
						"3": {
							"name": "punctuation.definition.arguments.begin.bracket.round.zephir"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.arguments.end.bracket.round.zephir"
						}
					},
					"name": "meta.method-call.static.zephir",
					"patterns": [
						{
							"include": "$self"
						}
					]
				},
				{
					"match": "(?i)(::)\\s*(class)\\b",
					"captures": {
						"1": {
							"name": "keyword.operator.class.zephir"
						},
						"2": {
							"name": "keyword.other.class.zephir"
						}
					}
				},
				{
					"match": "(?i)(::)\\s*(?:([a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)|([a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*))?",
					"captures": {
						"1": {
							"name": "keyword.operator.class.zephir"
						},
						"2": {
							"name": "punctuation.definition.variable.zephir"
						},
						"3": {
							"name": "constant.other.class.zephir"
						}
					}
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"include": "#regex-double-quoted"
				},
				{
					"include": "#string-double-quoted"
				},
				{
					"include": "#string-single-quoted"
				}
			]
		},
		"string-double-quoted": {
			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.zephir"
				}
			},
			"end": "\"",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.zephir"
				}
			},
			"name": "string.quoted.double.zephir",
			"patterns": [
				{
					"include": "#interpolation_double_quoted"
				},
				{
					"match": "\\\\(x\\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)",
					"name": "constant.character.escape.zephir"
				}
			]
		},
		"string-single-quoted": {
			"begin": "'",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.zephir"
				}
			},
			"end": "'",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.zephir"
				}
			},
			"name": "string.quoted.single.zephir",
			"patterns": [
				{
					"match": "\\\\[\\\\']",
					"name": "constant.character.escape.zephir"
				},
				{
					"match": "\\\\(x\\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)",
					"name": "constant.character.escape.zephir"
				}
			]
		},
		"use-inner": {
			"patterns": [
				{
					"include": "#comments"
				},
				{
					"begin": "(?i)\\b(as)\\s+",
					"beginCaptures": {
						"1": {
							"name": "keyword.other.use-as.zephir"
						}
					},
					"end": "(?i)[a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*",
					"endCaptures": {
						"0": {
							"name": "entity.other.alias.zephir"
						}
					}
				},
				{
					"include": "#class-name"
				},
				{
					"match": ",",
					"name": "punctuation.separator.delimiter.zephir"
				}
			]
		},
		"var_global": {
			"captures": {
				"1": {
					"name": "punctuation.definition.variable.zephir"
				}
			},
			"match": "((_(GET|POST|REQUEST|COOKIE|FILES))|arg(v|c))\\b",
			"name": "variable.other.global.zephir"
		},
		"var_global_safer": {
			"captures": {
				"1": {
					"name": "punctuation.definition.variable.zephir"
				}
			},
			"match": "((_(ENV|SERVER|SESSION)))",
			"name": "variable.other.global.safer.zephir"
		},
		"var_basic": {
			"patterns": [
				{
					"match": "(?i)[a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*",
					"name": "variable.other.zephir",
					"captures": {
						"1": {
							"name": "punctuation.definition.variable.zephir"
						}
					}
				}
			]
		},
		"variable-name": {
			"patterns": [
				{
					"include": "#var_global"
				},
				{
					"include": "#var_global_safer"
				},
				{
					"captures": {
						"1": {
							"name": "variable.other.zephir"
						},
						"2": {
							"name": "punctuation.definition.variable.zephir"
						},
						"4": {
							"name": "keyword.operator.class.zephir"
						},
						"5": {
							"name": "variable.other.property.zephir"
						},
						"6": {
							"name": "punctuation.section.array.begin.zephir"
						},
						"7": {
							"name": "constant.numeric.index.zephir"
						},
						"8": {
							"name": "variable.other.index.zephir"
						},
						"9": {
							"name": "punctuation.definition.variable.zephir"
						},
						"10": {
							"name": "string.unquoted.index.zephir"
						},
						"11": {
							"name": "punctuation.section.array.end.zephir"
						}
					},
					"match": "(?i)((\\$+)?(?<name>[a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*))(?:(->)(\\g<name>)|(\\[)(?:(\\d+)|((\\$+)?\\g<name>)|([a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*))(\\]))?"
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"include": "#var_language"
				},
				{
					"include": "#var_global"
				},
				{
					"include": "#var_global_safer"
				}
			]
		},
		"var_language": {
			"match": "\\b(this)\\b",
			"name": "variable.language.this.php",
			"captures": {
				"1": {
					"name": "storage.type.zephir"
				}
			}
		},
		"switch_statement": {
			"patterns": [
				{
					"match": "\\s+(?=switch\\b)"
				},
				{
					"begin": "\\bswitch\\b(?!\\s*\\(?.*\\)?\\s*:)",
					"beginCaptures": {
						"0": {
							"name": "keyword.control.switch.zephir"
						}
					},
					"end": "}",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.section.switch-block.end.bracket.curly.zephir"
						}
					},
					"name": "meta.switch-statement.zephir",
					"patterns": [
						{
							"begin": "\\(",
							"beginCaptures": {
								"0": {
									"name": "punctuation.definition.switch-expression.begin.bracket.round.zephir"
								}
							},
							"end": "\\)",
							"endCaptures": {
								"0": {
									"name": "punctuation.definition.switch-expression.end.bracket.round.zephir"
								}
							},
							"patterns": [
								{
									"include": "$self"
								}
							]
						},
						{
							"begin": "\\{",
							"beginCaptures": {
								"0": {
									"name": "punctuation.definition.section.switch-block.begin.bracket.curly.zephir"
								}
							},
							"end": "(?=\\})",
							"patterns": [
								{
									"include": "$self"
								}
							]
						}
					]
				}
			]
		},
		"null_coalescing": {
			"match": "\\?\\?",
			"name": "keyword.operator.null-coalescing.zephir"
		},
		"ternary_shorthand": {
			"match": "\\?:",
			"name": "keyword.operator.ternary.zephir"
		},
		"ternary_expression": {
			"begin": "\\?",
			"beginCaptures": {
				"0": {
					"name": "keyword.operator.ternary.zephir"
				}
			},
			"end": ":",
			"endCaptures": {
				"0": {
					"name": "keyword.operator.ternary.zephir"
				}
			},
			"patterns": [
				{
					"include": "$self"
				}
			]
		}
	}
}
