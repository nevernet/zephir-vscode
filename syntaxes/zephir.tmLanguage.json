{
	"name": "Zephir",
	"comment": "Zephir Language support for VSCode",
	"version": "0.3.13",
	"fileTypes": [
        "zep"
    ],
	"scopeName": "source.zephir",
	"information_for_contributors": [

	],

	"foldingStartMarker": "^.*\\bfunction\\s*(\\w+\\s*)?\\([^\\)]*\\)(\\s*\\{[^\\}]*)?\\s*$",
	"foldingStopMarker": "^\\s*\\}",

	"patterns": [
		{
			"include": "#comments"
		},
		{
			"begin": "(?i)^\\s*(interface)\\s+([a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)\\s*(extends)?\\s*",
			"beginCaptures": {
				"1": {
					"name": "storage.type.interface.zephir"
				},
				"2": {
					"name": "entity.name.type.interface.zephir"
				},
				"3": {
					"name": "storage.modifier.extends.zephir"
				}
			},
			"end": "(?i)((?:[a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*\\s*,\\s*)*)([a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)?\\s*(?:(?={)|$)",
			"endCaptures": {
				"1": {
					"patterns": [
						{
							"match": "(?i)[a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*",
							"name": "entity.other.inherited-class.zephir"
						},
						{
							"match": ",",
							"name": "punctuation.separator.classes.zephir"
						}
					]
				},
				"2": {
					"name": "entity.other.inherited-class.zephir"
				}
			},
			"name": "meta.interface.zephir",
			"patterns": [
				{
					"include": "#namespace"
				}
			]
		},
		{
			"match": "(?i)^\\s*(namespace)\\s+([a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}\\\\]+)(?=\\s*;)",
			"name": "meta.namespace.zephir",
			"captures": {
				"1": {
					"name": "keyword.other.namespace.zephir"
				},
				"2": {
					"name": "entity.name.type.namespace.zephir",
					"patterns": [
						{
							"match": "\\\\",
							"name": "punctuation.separator.inheritance.zephir"
						}
					]
				}
			}
		},
		{
			"begin": "(?i)(?:^)\\s*(namespace)\\s+",
			"beginCaptures": {
				"1": {
					"name": "keyword.other.namespace.zephir"
				}
			},
			"end": "(?<=})|(?=\\?>)",
			"name": "meta.namespace.zephir",
			"patterns": [
				{
					"include": "#comments"
				},
				{
					"match": "(?i)[a-z0-9_\\x{7f}-\\x{7fffffff}\\\\]+",
					"name": "entity.name.type.namespace.zephir",
					"captures": {
						"0": {
							"patterns": [
								{
									"match": "\\\\",
									"name": "punctuation.separator.inheritance.zephir"
								}
							]
						}
					}
				},
				{
					"begin": "{",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.namespace.begin.bracket.curly.zephir"
						}
					},
					"end": "}|(?=\\?>)",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.namespace.end.bracket.curly.zephir"
						}
					},
					"patterns": [
						{
							"include": "$self"
						}
					]
				},
				{
					"match": "[^\\s]+",
					"name": "invalid.illegal.identifier.zephir"
				}
			]
		},

		{
			"captures": {
				"1": {
					"name": "storage.type.function.zephir"
				},
				"2": {
					"name": "entity.name.function.zephir"
				},
				"3": {
					"name": "punctuation.definition.parameters.begin.zephir"
				},
				"4": {
					"name": "variable.parameter.function.zephir"
				},
				"5": {
					"name": "punctuation.definition.parameters.end.zephir"
				}
			},
			"match": "\\b(function)\\s+([a-zA-Z_$]\\w*)?\\s*(\\()(.*?)(\\))",
			"name": "meta.function.zephir"
		},
		{
			"captures": {
				"1": {
					"name": "entity.name.function.zephir"
				},
				"2": {
					"name": "storage.type.function.zephir"
				},
				"3": {
					"name": "punctuation.definition.parameters.begin.zephir"
				},
				"4": {
					"name": "variable.parameter.function.zephir"
				},
				"5": {
					"name": "punctuation.definition.parameters.end.zephir"
				}
			},
			"match": "\\b([a-zA-Z_?.$][\\w?.$]*)\\s*:\\s*\\b(function)?\\s*(\\()(.*?)(\\))",
			"name": "meta.function.json.zephir"
		},
		{
			"captures": {
				"1": {
					"name": "string.quoted.single.zephir"
				},
				"2": {
					"name": "punctuation.definition.string.begin.zephir"
				},
				"3": {
					"name": "entity.name.function.zephir"
				},
				"4": {
					"name": "punctuation.definition.string.end.zephir"
				},
				"5": {
					"name": "string.quoted.double.zephir"
				},
				"6": {
					"name": "punctuation.definition.string.begin.zephir"
				},
				"7": {
					"name": "entity.name.function.zephir"
				},
				"8": {
					"name": "punctuation.definition.string.end.zephir"
				},
				"9": {
					"name": "entity.name.function.zephir"
				},
				"10": {
					"name": "punctuation.definition.parameters.begin.zephir"
				},
				"11": {
					"name": "variable.parameter.function.zephir"
				},
				"12": {
					"name": "punctuation.definition.parameters.end.zephir"
				}
			},
			"comment": "Attempt to match \"foo\": function",
			"match": "(?:((')([^']*)('))|((\")([^\"]*)(\")))\\s*:\\s*\\b(function)?\\s*(\\()([^)]*)(\\))",
			"undefined": "name"
		},
		{
			"captures": {
				"1": {
					"name": "keyword.operator.new.zephir"
				},
				"2": {
					"name": "entity.name.type.instance.zephir"
				}
			},
			"match": "(new)\\s+(\\w+(?:\\.\\w*)?)",
			"name": "meta.class.instance.constructor"
		},
		{
			"match": "\\b((0(x|X)[0-9a-fA-F]+)|([0-9]+(\\.[0-9]+)?))\\b",
			"name": "constant.numeric.zephir"
		},
		{
			"match": "<([a-zA-Z0-9\\_\\\\\\!]+)>",
			"name": "string.regexp.zephir"
		},
		{
			"begin": "'",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.zephir"
				}
			},
			"end": "'",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.zephir"
				}
			},
			"name": "string.quoted.single.zephir",
			"patterns": [
				{
					"match": "\\\\(x\\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)",
					"name": "constant.character.escape.zephir"
				}
			]
		},
		{
			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.zephir"
				}
			},
			"end": "\"",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.zephir"
				}
			},
			"name": "string.quoted.double.zephir",
			"patterns": [
				{
					"match": "\\\\(x\\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)",
					"name": "constant.character.escape.zephir"
				}
			]
		},
		{
			"begin": "/\\*\\*(?!/)",
			"captures": {
				"0": {
					"name": "punctuation.definition.comment.zephir"
				}
			},
			"end": "\\*/",
			"name": "comment.block.documentation.zephir"
		},
		{
			"begin": "/\\*",
			"captures": {
				"0": {
					"name": "punctuation.definition.comment.zephir"
				}
			},
			"end": "\\*/",
			"name": "comment.block.zephir"
		},
		{
			"captures": {
				"1": {
					"name": "punctuation.definition.comment.zephir"
				}
			},
			"match": "(//).*$\\n?",
			"name": "comment.line.double-slash.zephir"
		},
		{
			"match": "\\b(const|fetch|empty|likely|unlikely|isset|unset|final|implements|private|protected|public|internal|static|scoped|inline|throws|clone|deprecated)\\b",
			"name": "storage.modifier.zephir"
		},
		{
			"match": "\\b(echo|require|break|case|catch|let|continue|default|do|else|elseif|for|goto|if|return|switch|match|throw|try|while|loop)\\b",
			"name": "keyword.control.zephir"
		},
		{
			"match": "\\b(in|reverse|instanceof|new|typeof)\\b",
			"name": "keyword.operator.zephir"
		},
		{
			"match": "\\btrue\\b",
			"name": "constant.language.boolean.true.zephir"
		},
		{
			"match": "\\bfalse\\b",
			"name": "constant.language.boolean.false.zephir"
		},
		{
			"match": "\\bnull\\b",
			"name": "constant.language.null.zephir"
		},
		{
			"match": "\\b(parent|self|this)\\b",
			"name": "variable.language.zephir"
		},
		{
			"match": "\\b(PHP_EOL|PHP_VERSION|([A-Z0-9\\_]+))\\b",
			"name": "string.regexp.zephir"
		},
		{
			"match": "->|::",
			"name": "keyword.operator.zephir"
		},
		{
			"match": "!|\\$|%|&|\\*|\\-\\-|\\-|\\+\\+|\\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\|\\||\\?\\:|\\*=|(?<!\\()/=|%=|\\+=|\\-=|&=|\\.=|\\^=|\\b(in|instanceof|new|typeof|void)\\b",
			"name": "keyword.operator.zephir"
		},
		{
			"match": "\\;",
			"name": "punctuation.terminator.statement.zephir"
		},
		{
			"match": ",[ |\\t]*",
			"name": "meta.delimiter.object.comma.zephir"
		},
		{
			"match": "\\.",
			"name": "meta.delimiter.method.period.zephir"
		},
		{
			"match": "\\{|\\}",
			"name": "meta.brace.curly.zephir"
		},
		{
			"match": "\\(|\\)",
			"name": "meta.brace.round.zephir"
		},
		{
			"match": "\\[|\\]",
			"name": "meta.brace.square.zephir"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"begin": "/\\*\\*(?=\\s)",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.zephir"
						}
					},
					"end": "\\*/",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.comment.zephir"
						}
					},
					"name": "comment.block.documentation.zephirdoc.zephir",
					"patterns": [
						{
							"include": "#zephir_doc"
						}
					]
				},
				{
					"begin": "/\\*",
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.zephir"
						}
					},
					"end": "\\*/",
					"name": "comment.block.zephir"
				},
				{
					"begin": "(^\\s+)?(?=//)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.whitespace.comment.leading.zephir"
						}
					},
					"end": "(?!\\G)",
					"patterns": [
						{
							"begin": "//",
							"beginCaptures": {
								"0": {
									"name": "punctuation.definition.comment.zephir"
								}
							},
							"end": "\\n|(?=\\?>)",
							"name": "comment.line.double-slash.zephir"
						}
					]
				}
			]
		},
		"class-builtin": {
			"patterns": [
				{
					"match": "(?xi)\n(\\\\)?\\b\n((APC|Append)Iterator|Array(Access|Iterator|Object)\n|Bad(Function|Method)CallException\n|(Caching|CallbackFilter)Iterator|Collator|Collectable|Cond|Countable|CURLFile\n|Date(Interval|Period|Time(Interface|Immutable|Zone)?)?|Directory(Iterator)?|DomainException\n|DOM(Attr|CdataSection|CharacterData|Comment|Document(Fragment)?|Element|EntityReference\n    |Implementation|NamedNodeMap|Node(list)?|ProcessingInstruction|Text|XPath)\n|(Error)?Exception|EmptyIterator\n|finfo\n|Ev(Check|Child|Embed|Fork|Idle|Io|Loop|Periodic|Prepare|Signal|Stat|Timer|Watcher)?\n|Event(Base|Buffer(Event)?|SslContext|Http(Request|Connection)?|Config|DnsBase|Util|Listener)?\n|FANNConnection|(Filter|Filesystem)Iterator\n|Gender\\\\Gender|GlobIterator|Gmagick(Draw|Pixel)?\n|Haru(Annotation|Destination|Doc|Encoder|Font|Image|Outline|Page)\n|Http((Inflate|Deflate)?Stream|Message|Request(Pool)?|Response|QueryString)\n|HRTime\\\\(PerformanceCounter|StopWatch)\n|Intl(Calendar|((CodePoint|RuleBased)?Break|Parts)?Iterator|DateFormatter|TimeZone)\n|Imagick(Draw|Pixel(Iterator)?)?\n|InfiniteIterator|InvalidArgumentException|Iterator(Aggregate|Iterator)?\n|JsonSerializable\n|KTaglib_(MPEG_(File|AudioProperties)|Tag|ID3v2_(Tag|(AttachedPicture)?Frame))\n|Lapack|(Length|Locale|Logic)Exception|LimitIterator|Lua(Closure)?\n|Mongo(BinData|Client|Code|Collection|CommandCursor|Cursor(Exception)?|Date|DB(Ref)?|DeleteBatch\n      |Grid(FS(Cursor|File)?)|Id|InsertBatch|Int(32|64)|Log|Pool|Regex|ResultException|Timestamp\n      |UpdateBatch|Write(Batch|ConcernException))?\n|Memcache(d)?|MessageFormatter|MultipleIterator|Mutex\n|mysqli(_(driver|stmt|warning|result))?\n|MysqlndUh(Connection|PreparedStatement)\n|NoRewindIterator|Normalizer|NumberFormatter\n|OCI-(Collection|Lob)|OuterIterator|(OutOf(Bounds|Range)|Overflow)Exception\n|ParentIterator|PDO(Statement)?|Phar(Data|FileInfo)?|php_user_filter|Pool\n|QuickHash(Int(Set|StringHash)|StringIntHash)\n|Recursive(Array|Caching|Directory|Fallback|Filter|Iterator|Regex|Tree)?Iterator\n|Reflection(Class|Function(Abstract)?|Method|Object|Parameter|Property|(Zend)?Extension)?\n|RangeException|Reflector|RegexIterator|ResourceBundle|RuntimeException|RRD(Creator|Graph|Updater)\n|SAM(Connection|Message)|SCA(_(SoapProxy|LocalProxy))?\n|SDO_(DAS_(ChangeSummary|Data(Factory|Object)|Relational|Setting|XML(_Document)?)\n     |Data(Factory|Object)|Exception|List|Model_(Property|ReflectionDataObject|Type)|Sequence)\n|SeekableIterator|Serializable|SessionHandler(Interface)?|SimpleXML(Iterator|Element)|SNMP\n|Soap(Client|Fault|Header|Param|Server|Var)\n|SphinxClient|Spoofchecker\n|Spl(DoublyLinkedList|Enum|File(Info|Object)|FixedArray|(Max|Min)?Heap|Observer|ObjectStorage\n    |(Priority)?Queue|Stack|Subject|Type|TempFileObject)\n|SQLite(3(Result|Stmt)?|Database|Result|Unbuffered)\n|stdClass|streamWrapper|SVM(Model)?|Swish(Result(s)?|Search)?|Sync(Event|Mutex|ReaderWriter|Semaphore)\n|Thread(ed)?|tidy(Node)?|TokyoTyrant(Table|Iterator|Query)?|Transliterator|Traversable\n|UConverter|(Underflow|UnexpectedValue)Exception\n|V8Js(Exception)?|Varnish(Admin|Log|Stat)\n|Worker|Weak(Map|Ref)\n|XML(Diff\\\\(Base|DOM|File|Memory)|Reader|Writer)|XsltProcessor\n|Yaf_(Route_(Interface|Map|Regex|Rewrite|Simple|Supervar)\n     |Action_Abstract|Application|Config_(Simple|Ini|Abstract)|Controller_Abstract\n     |Dispatcher|Exception|Loader|Plugin_Abstract|Registry|Request_(Abstract|Simple|Http)\n     |Response_Abstract|Router|Session|View_(Simple|Interface))\n|Yar_(Client(_Exception)?|Concurrent_Client|Server(_Exception)?)\n|ZipArchive|ZMQ(Context|Device|Poll|Socket)?)\n\\b",
					"name": "support.class.builtin.zephir",
					"captures": {
						"1": {
							"name": "punctuation.separator.inheritance.zephir"
						}
					}
				}
			]
		},
		"class-name": {
			"patterns": [
				{
					"begin": "(?i)(?=\\\\?[a-z_0-9]+\\\\)",
					"end": "(?i)([a-z_][a-z_0-9]*)?(?![a-z0-9_\\\\])",
					"endCaptures": {
						"1": {
							"name": "support.class.zephir"
						}
					},
					"patterns": [
						{
							"include": "#namespace"
						}
					]
				},
				{
					"include": "#class-builtin"
				},
				{
					"begin": "(?=[\\\\a-zA-Z_])",
					"end": "(?i)([a-z_][a-z_0-9]*)?(?![a-z0-9_\\\\])",
					"endCaptures": {
						"1": {
							"name": "support.class.zephir"
						}
					},
					"patterns": [
						{
							"include": "#namespace"
						}
					]
				}
			]
		},
		"namespace": {
			"begin": "(?i)(?:(namespace)|[a-z_\\x{7f}-\\x{7fffffff}][a-z0-9_\\x{7f}-\\x{7fffffff}]*)?(\\\\)",
			"beginCaptures": {
				"1": {
					"name": "variable.language.namespace.zephir"
				},
				"2": {
					"name": "punctuation.separator.inheritance.zephir"
				}
			},
			"end": "(?i)(?![a-z0-9_\\x{7f}-\\x{7fffffff}]*\\\\)",
			"name": "support.other.namespace.zephir",
			"patterns": [
				{
					"match": "\\\\",
					"name": "punctuation.separator.inheritance.zephir"
				}
			]
		},
		"zephir_doc": {
			"patterns": [
				{
					"match": "^(?!\\s*\\*).*?(?:(?=\\*\\/)|$\\n?)",
					"name": "invalid.illegal.missing-asterisk.zephirdoc.zephir"
				},
				{
					"captures": {
						"1": {
							"name": "keyword.other.zephirdoc.zephir"
						},
						"3": {
							"name": "storage.modifier.zephir"
						},
						"4": {
							"name": "invalid.illegal.wrong-access-type.zephirdoc.zephir"
						}
					},
					"match": "^\\s*\\*\\s*(@access)\\s+((public|private|protected)|(.+))\\s*$"
				},
				{
					"captures": {
						"1": {
							"name": "keyword.other.zephirdoc.zephir"
						},
						"2": {
							"name": "markup.underline.link.zephir"
						}
					},
					"match": "(@xlink)\\s+(.+)\\s*$"
				},
				{
					"begin": "(@(?:global|param|property(-(read|write))?|return|throws|var))\\s+(?=[A-Za-z_\\x{7f}-\\x{7fffffff}\\\\]|\\()",
					"beginCaptures": {
						"1": {
							"name": "keyword.other.zephirdoc.zephir"
						}
					},
					"end": "(?=\\s|\\*/)",
					"contentName": "meta.other.type.zephirdoc.zephir",
					"patterns": [
						{
							"include": "#zephir_doc_types_array_multiple"
						},
						{
							"include": "#zephir_doc_types_array_single"
						},
						{
							"include": "#zephir_doc_types"
						}
					]
				},
				{
					"match": "(?x)\n@\n(\n  api|abstract|author|category|copyright|example|global|inherit[Dd]oc|internal|\n  license|link|method|property(-(read|write))?|package|param|return|see|since|source|\n  static|subpackage|throws|todo|fixme|var|version|uses|deprecated|final|ignore\n)\\b",
					"name": "keyword.other.zephirdoc.zephir"
				},
				{
					"captures": {
						"1": {
							"name": "keyword.other.zephirdoc.zephir"
						}
					},
					"match": "{(@(link|inherit[Dd]oc)).+?}",
					"name": "meta.tag.inline.zephirdoc.zephir"
				}
			]
		},
		"zephir_doc_types": {
			"match": "(?i)[a-z_\\x{7f}-\\x{7fffffff}\\\\][a-z0-9_\\x{7f}-\\x{7fffffff}\\\\]*(\\|[a-z_\\x{7f}-\\x{7fffffff}\\\\][a-z0-9_\\x{7f}-\\x{7fffffff}\\\\]*)*",
			"captures": {
				"0": {
					"patterns": [
						{
							"match": "(?x)\\b\n(int|integer|uint|bool|boolean|bool|float|double|long|ulong|char|uchar|string|void|unsigned|null|mixed\n|array|self|static|callback|resource|object|false|true)\\b",
							"name": "keyword.other.type.zephir"
						},
						{
							"include": "#class-name"
						},
						{
							"match": "\\|",
							"name": "punctuation.separator.delimiter.zephir"
						}
					]
				}
			}
		},
		"zephir_doc_types_array_multiple": {
			"begin": "\\(",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.type.begin.bracket.round.zephirdoc.zephir"
				}
			},
			"end": "(\\))(\\[\\])|(?=\\*/)",
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.type.end.bracket.round.zephirdoc.zephir"
				},
				"2": {
					"name": "keyword.other.array.zephirdoc.zephir"
				}
			},
			"patterns": [
				{
					"include": "#zephir_doc_types_array_multiple"
				},
				{
					"include": "#zephir_doc_types_array_single"
				},
				{
					"include": "#zephir_doc_types"
				},
				{
					"match": "\\|",
					"name": "punctuation.separator.delimiter.zephir"
				}
			]
		},
		"zephir_doc_types_array_single": {
			"match": "(?i)([a-z_\\x{7f}-\\x{7fffffff}\\\\][a-z0-9_\\x{7f}-\\x{7fffffff}\\\\]*)(\\[\\])",
			"captures": {
				"1": {
					"patterns": [
						{
							"include": "#zephir_doc_types"
						}
					]
				},
				"2": {
					"name": "keyword.other.array.zephirdoc.zephir"
				}
			}
		}
	}
}
